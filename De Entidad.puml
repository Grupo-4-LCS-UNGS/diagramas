@startuml

class Vehiculo {
  + Int id_vehiculo
  + ModeloVehiculo modelo
  + String matricula
  + Int anio
  + Int kilometraje
  + Enum TipoCombustible
  + Int id_traccar note: nuevo
  + Enum EstadoVehiculo
  + File documentacion
  + crear(): Vehiculo
  + modificarEstado(EstadoVehiculo):void

}

TipoCombustible -- Vehiculo

enum TipoCombustible {
  GASOLINA
  DIESEL
  ELECTRICO
  HIBRIDO
}

enum EstadoVehiculo {
  ACTIVO
  EN_MANTENIMIENTO
  BAJA_TEMPORAL
  BAJA_DEFINITIVA
}

class Sede {
  + Int id_sede
  + String nombre_sede
  + Strind direccion_sede
  + double latitude_sede
  + double longitude_sede
}

note bottom of  Sede: Tal vez no convenga complejizar tanto el negocio, \ny que sea una sola gestión sin importan dónde 


ModeloVehiculo "n" <-- "1" MarcaVehiculo
Vehiculo "n" <-- "1" ModeloVehiculo
Vehiculo <-- EstadoVehiculo


class MarcaVehiculo {
  + Int id_marca_vehiculo
  + String nombre_marca
  + Image logo
}

class ModeloVehiculo {
  + Int id_modelo_vehiculo
  + Int id_marca_vehiculo
  + String nombre_modelo
}


Mantenimiento "n" <-- "1" Vehiculo: Recibe
Mantenimiento <-- EstadoMantenimiento
Mantenimiento "n" o-- "m" Repuesto


class Mantenimiento {
  + Int id_mantenimiento
  + Int id_vehiculo
  + Date fecha_inicio
  + Date fecha_fin
  + Enum EstadoMantenimiento
  + String descripcion 
}



class Repuesto {
  + Int id_repuesto
  + String nombre_repuesto
  + ModeloVehiculo id_modelo_vehiculo
  + Int Stock
  + Int umbral_minimo_stock
}

note left of Repuesto: Falta relacionar con bitacora de movimiento, \ncon proveedor que lo vende, \ncon precio de compra

ModeloVehiculo <-- Repuesto: Corresponde



enum EstadoMantenimiento {
  ABIERTO
  CERRADO_RESUELTO
  CERRADO_IMPOSIBLE_REPARAR
}


@enduml
